# Production MySQL database configuration
spring.datasource.url=jdbc:mysql://${PROD_DB_HOST}:${PROD_DB_PORT}/${PROD_DB_NAME}?createDatabaseIfNotExist=true
spring.datasource.username=${PROD_DB_USERNAME}
spring.datasource.password=${PROD_DB_PASSWORD}
spring.datasource.name=book-store-management

# MySQL driver class and dialect
spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.MySQLDialect

# JPA properties
# Disable SQL queries in console in production
spring.jpa.show-sql=false
# Prevent automatic schema updates in production (use database migration tools)
spring.jpa.hibernate.ddl-auto=update

# Connection pool configuration
spring.datasource.hikari.maximum-pool-size=20
spring.datasource.hikari.minimum-idle=5

# Logging configuration (adjust log levels as needed)
logging.level.org.springframework=INFO
logging.level.com.example=INFO

# Web properties for handling file uploads and maximum size of HTTP requests
spring.servlet.multipart.max-file-size=250MB
spring.servlet.multipart.max-request-size=250MB
server.tomcat.max-http-form-post-size=250000000
server.tomcat.max-swallow-size=250000000

# JWT token properties for authentication and authorization
# Secret key for signing JWT tokens (change this in production)
app.jwt.secret=${PROD_JWT_SECRET}
# Expiration time for JWT tokens in milliseconds (e.g., 1 hour)
app.jwt.expiration-in-ms=3600000
# Internal API key for authentication purposes (change this in production)
authentication.internal-api-key=${PROD_INTERNAL_API_KEY}

